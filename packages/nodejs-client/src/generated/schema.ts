/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/submit": {
    /** Submits new data to WaterlyConnect */
    post: operations["submitData"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    TagDatum: {
      /**
       * @description The tag or metric name.  This value must be unique per Device Id. 
       * @example WTP1_FL_WEIGHT
       */
      name: string;
      /**
       * @description (Optional, Typically Unused) unit type enum value, as assigned by Waterly administrators. 
       * @example 0
       */
      type?: number;
      /**
       * @description (Optional) Unit type of the provided Datum. 
       * @example LBR
       */
      unit?: string;
      /**
       * @description The metric or tag value.  Values are expected to be numeric, but transmitted as a string. 
       * @example 900.2
       */
      value: string;
      /**
       * @description The time at which the vaule was captured or last changed.  This is a Unix-style timestamp, measured in whole integers, as the number of seconds elapsed since the Epoch (1970-01-01 00:00:00 UTC). 
       * @example 1603806033
       */
      last_change_timestamp: number;
    };
    /** @description Information describing the peer submitting information to WaterlyConnect. */
    Device: {
      /**
       * @description Identifier for the remote system, assigned by the Waterly administrative team. 
       * @example sample-device-00001
       */
      id: string;
      /**
       * @description The type of integration device, assigned by the Waterly administrative team. 
       * @example waterly-connect-virtual
       */
      type: string;
      /**
       * @description (Optional) For physical devices, the internal IP address of the hardware device. 
       * @example 192.168.1.6
       */
      lan_ip?: string;
      /**
       * @description (Optional) For physical devices, the external/Internet-facing IP address of the hardware device. 
       * @example 0.0.0.0
       */
      wan_ip?: string;
      /**
       * @description (Optional) For physical devices, the unique serial number for the given piece of equipment. 
       * @example ABC-PDQ-123456
       */
      serial?: string;
      /**
       * @description (Optional) For physical devices, the amount of time (measured in milliseconds) since last boot. 
       * @example 23452323234113
       */
      uptime_millis?: number;
    };
    WaterlyConnectSubmission: {
      /**
       * @description A Unix-style timestamp, measured in whole integers, as the number of seconds elapsed since the Epoch (1970-01-01 00:00:00 UTC). 
       * @example 1629489199
       */
      timestamp: number;
      device: components["schemas"]["Device"];
      /** @description An array of measurements to be submitted to Waterly. */
      tags: (components["schemas"]["TagDatum"])[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  submitData: {
    /** Submits new data to WaterlyConnect */
    parameters: {
        /** @example WaterlyConnect */
        /** @example abc-pdq */
      header: {
        "x-waterly-request-type": string;
        "x-waterly-connect-token": string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["WaterlyConnectSubmission"];
      };
    };
    responses: {
      /** @description OK */
      200: never;
      /** @description Malformed input */
      400: never;
      /** @description Internal System Error */
      500: never;
    };
  };
}
